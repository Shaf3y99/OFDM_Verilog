// -------------------------------------------------------------
// 
// File Name: D:\NU\OF\WHDLOFDMTransmitterExample_all_new\hdl_prj\hdlsrc3\whdlOFDMTransmitter_up_con\whdlOFDMTx\whdlOFDMTx_Counter_for_Read_Address.v
// Created: 2023-05-02 12:36:36
// 
// Generated by MATLAB 9.13 and HDL Coder 4.0
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: whdlOFDMTx_Counter_for_Read_Address
// Source Path: whdlOFDMTx/Frame Formation and OFDM Modulation/Generate OFDM Modulator Valid/Counter for Read Address
// Hierarchy Level: 4
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module whdlOFDMTx_Counter_for_Read_Address
          (clk,
           reset,
           enb_1_32_0,
           enableIn,
           out);


  input   clk;
  input   reset;
  input   enb_1_32_0;
  input   enableIn;
  output  [11:0] out;  // ufix12


  reg [11:0] out_1;  // ufix12
  reg [11:0] tempOut;  // ufix12
  reg [11:0] tempOut_next;  // ufix12
  reg [11:0] tempOut_temp;  // ufix12
  reg [12:0] add_temp;  // ufix13
  reg [12:0] t_0;  // ufix13


  always @(posedge clk or posedge reset)
    begin : Counter_for_Read_Address_process
      if (reset == 1'b1) begin
        tempOut <= 12'b000000000000;
      end
      else begin
        if (enb_1_32_0) begin
          tempOut <= tempOut_next;
        end
      end
    end

  always @(enableIn, tempOut) begin
    add_temp = 13'b0000000000000;
    t_0 = 13'b0000000000000;
    tempOut_temp = tempOut;
    if (enableIn) begin
      if (tempOut == 12'b101000011111) begin
        tempOut_temp = 12'b000000000000;
      end
      else begin
        t_0 = {1'b0, tempOut};
        add_temp = t_0 + 13'b0000000000001;
        if (add_temp[12] != 1'b0) begin
          tempOut_temp = 12'b111111111111;
        end
        else begin
          tempOut_temp = add_temp[11:0];
        end
      end
    end
    out_1 = tempOut_temp;
    tempOut_next = tempOut_temp;
  end



  assign out = out_1;

endmodule  // whdlOFDMTx_Counter_for_Read_Address

