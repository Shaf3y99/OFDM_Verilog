// -------------------------------------------------------------
// 
// File Name: D:\OFDM\HDLImplementationOfDUCForLTEExample(Single Tone Output)\HDLImplementationOfDUCForLTEExample\hdlsrc\complex_upsampler\DUCforLTEHDL\Addressable_Delay_Line_block4.v
// Created: 2023-05-25 17:45:33
// 
// Generated by MATLAB 9.13 and HDL Coder 4.0
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Addressable_Delay_Line_block4
// Source Path: DUCforLTEHDL/HDL_DUC/Halfband Interpolator/DUCforLTEHDL/HDL_DUC/Halfband Interpolator/FIRFilter1/Addressable 
// Delay Lin
// Hierarchy Level: 3
// 
// Addressable Delay Line
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Addressable_Delay_Line_block4
          (clk,
           reset,
           enb,
           dataIn,
           validIn,
           wrAddr,
           rdAddr,
           dataOut);


  input   clk;
  input   reset;
  input   enb;
  input   signed [17:0] dataIn;  // sfix18_En14
  input   validIn;
  input   [2:0] wrAddr;  // ufix3
  input   [2:0] rdAddr;  // ufix3
  output  signed [17:0] dataOut;  // sfix18_En14


  wire signed [17:0] delayedSignals;  // sfix18_En14
  reg signed [17:0] dataOut_1;  // sfix18_En14


  SimpleDualPortRAM_generic #(.AddrWidth(3),
                              .DataWidth(18)
                              )
                            u_simpleDualPortRam (.clk(clk),
                                                 .enb(enb),
                                                 .wr_din(dataIn),
                                                 .wr_addr(wrAddr),
                                                 .wr_en(validIn),
                                                 .rd_addr(rdAddr),
                                                 .rd_dout(delayedSignals)
                                                 );

  always @(posedge clk or posedge reset)
    begin : reg_rsvd_process
      if (reset == 1'b1) begin
        dataOut_1 <= 18'sb000000000000000000;
      end
      else begin
        if (enb) begin
          dataOut_1 <= delayedSignals;
        end
      end
    end



  assign dataOut = dataOut_1;

endmodule  // Addressable_Delay_Line_block4

