// -------------------------------------------------------------
// 
// File Name: D:\NU\OF\WHDLOFDMTransmitterExample_all_new\hdl_prj\hdlsrc3\whdlOFDMTransmitter_up_con\whdlOFDMTx\whdlOFDMTx_Enable_Header_and_Preamble.v
// Created: 2023-05-02 12:36:36
// 
// Generated by MATLAB 9.13 and HDL Coder 4.0
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: whdlOFDMTx_Enable_Header_and_Preamble
// Source Path: whdlOFDMTx/Frame Controller and Input Sampler/Enable Header and Preamble 
// Hierarchy Level: 3
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module whdlOFDMTx_Enable_Header_and_Preamble
          (clk,
           reset,
           enb_1_2_0,
           sampleInParam,
           headerSet,
           preambleSet);


  input   clk;
  input   reset;
  input   enb_1_2_0;
  input   sampleInParam;
  output  headerSet;
  output  preambleSet;


  reg  Delay2_out1;
  wire out;
  wire Falling_Edge_Detector1_out1;
  wire Constant1_out1;
  reg  Unit_Delay_Enabled_Synchronous_out1;
  wire Falling_Edge_Detector2_out1;
  wire out_1;


  always @(posedge clk or posedge reset)
    begin : Delay2_process
      if (reset == 1'b1) begin
        Delay2_out1 <= 1'b0;
      end
      else begin
        if (enb_1_2_0) begin
          Delay2_out1 <= sampleInParam;
        end
      end
    end



  assign headerSet = Delay2_out1;

  whdlOFDMTx_MATLAB_Function3 u_MATLAB_Function3 (.clk(clk),
                                                  .reset(reset),
                                                  .enb_1_2_0(enb_1_2_0),
                                                  .trigger(sampleInParam),
                                                  .out(out)
                                                  );

  whdlOFDMTx_Falling_Edge_Detector1 u_Falling_Edge_Detector1 (.clk(clk),
                                                              .reset(reset),
                                                              .enb_1_2_0(enb_1_2_0),
                                                              .in(out),
                                                              .out(Falling_Edge_Detector1_out1)
                                                              );

  assign Constant1_out1 = 1'b0;



  always @(posedge clk or posedge reset)
    begin : Unit_Delay_Enabled_Synchronous_process
      if (reset == 1'b1) begin
        Unit_Delay_Enabled_Synchronous_out1 <= 1'b1;
      end
      else begin
        if (enb_1_2_0 && Falling_Edge_Detector1_out1) begin
          Unit_Delay_Enabled_Synchronous_out1 <= Constant1_out1;
        end
      end
    end



  whdlOFDMTx_Falling_Edge_Detector2 u_Falling_Edge_Detector2 (.clk(clk),
                                                              .reset(reset),
                                                              .enb_1_2_0(enb_1_2_0),
                                                              .in(Unit_Delay_Enabled_Synchronous_out1),
                                                              .out(Falling_Edge_Detector2_out1)
                                                              );

  whdlOFDMTx_MATLAB_Function4 u_MATLAB_Function4 (.clk(clk),
                                                  .reset(reset),
                                                  .enb_1_2_0(enb_1_2_0),
                                                  .trigger(Falling_Edge_Detector2_out1),
                                                  .out(out_1)
                                                  );

  assign preambleSet = out_1;

endmodule  // whdlOFDMTx_Enable_Header_and_Preamble

