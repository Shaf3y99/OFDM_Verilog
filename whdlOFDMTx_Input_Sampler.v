// -------------------------------------------------------------
// 
// File Name: D:\NU\OF\WHDLOFDMTransmitterExample_all_new\hdl_prj\hdlsrc3\whdlOFDMTransmitter_up_con\whdlOFDMTx\whdlOFDMTx_Input_Sampler.v
// Created: 2023-05-02 12:36:36
// 
// Generated by MATLAB 9.13 and HDL Coder 4.0
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: whdlOFDMTx_Input_Sampler
// Source Path: whdlOFDMTx/Frame Controller and Input Sampler/Input Sampler
// Hierarchy Level: 3
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module whdlOFDMTx_Input_Sampler
          (clk,
           reset,
           enb_1_2_0,
           modInd,
           codeInd,
           sampleInParam,
           modIndex,
           codeIndex,
           loadSymMod);


  input   clk;
  input   reset;
  input   enb_1_2_0;
  input   [1:0] modInd;  // ufix2
  input   [1:0] codeInd;  // ufix2
  input   sampleInParam;
  output  [1:0] modIndex;  // ufix2
  output  [1:0] codeIndex;  // ufix2
  output  loadSymMod;


  reg [1:0] Unit_Delay_Enabled_Synchronous_out1;  // ufix2
  reg [1:0] Unit_Delay_Enabled_Synchronous1_out1;  // ufix2
  reg  Delay_out1;


  always @(posedge clk or posedge reset)
    begin : Unit_Delay_Enabled_Synchronous_process
      if (reset == 1'b1) begin
        Unit_Delay_Enabled_Synchronous_out1 <= 2'b01;
      end
      else begin
        if (enb_1_2_0 && sampleInParam) begin
          Unit_Delay_Enabled_Synchronous_out1 <= modInd;
        end
      end
    end



  assign modIndex = Unit_Delay_Enabled_Synchronous_out1;

  always @(posedge clk or posedge reset)
    begin : Unit_Delay_Enabled_Synchronous1_process
      if (reset == 1'b1) begin
        Unit_Delay_Enabled_Synchronous1_out1 <= 2'b00;
      end
      else begin
        if (enb_1_2_0 && sampleInParam) begin
          Unit_Delay_Enabled_Synchronous1_out1 <= codeInd;
        end
      end
    end



  assign codeIndex = Unit_Delay_Enabled_Synchronous1_out1;

  always @(posedge clk or posedge reset)
    begin : Delay_process
      if (reset == 1'b1) begin
        Delay_out1 <= 1'b0;
      end
      else begin
        if (enb_1_2_0) begin
          Delay_out1 <= sampleInParam;
        end
      end
    end



  assign loadSymMod = Delay_out1;

endmodule  // whdlOFDMTx_Input_Sampler

